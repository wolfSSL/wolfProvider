name: Git SSH Default Replace Tests

on:
  push:
    branches: [ 'master', 'main', 'release/**' ]
  pull_request:
    branches: [ '*' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_wolfprovider:
    uses: ./.github/workflows/build-wolfprovider.yml
    with:
      wolfssl_ref: ${{ matrix.wolfssl_ref }}
      openssl_ref: ${{ matrix.openssl_ref }}
      fips_ref: ${{ matrix.fips_ref }}
      replace_default: ${{ matrix.replace_default }}
    strategy:
      matrix:
        wolfssl_ref: [ 'v5.8.2-stable' ]
        openssl_ref: [ 'openssl-3.5.2' ]
        fips_ref: [ 'FIPS', 'non-FIPS' ]
        replace_default: [ true ]

  git-ssh-default-replace-test:
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/wolfssl/build-wolfprovider-debian:bookworm
      env:
        DEBIAN_FRONTEND: noninteractive
      # Add network capabilities so ifconfig/RTNETLINK operations are permitted
      # These are passed to `docker run` as runtime options
      options: --cap-add=NET_ADMIN --cap-add=NET_RAW
    needs: build_wolfprovider
    # This should be a safe limit for the tests to run.
    timeout-minutes: 20
    strategy:
      matrix:
        wolfssl_ref: [ 'v5.8.2-stable' ]
        openssl_ref: [ 'openssl-3.5.2' ]
        fips_ref: [ 'FIPS', 'non-FIPS' ]
        replace_default: [ true ]
        key_type: [ 'rsa', 'ecdsa', 'ed25519', 'chacha20-poly1305' ]
        force_fail: [ 'WOLFPROV_FORCE_FAIL=1', '' ]
        iterations: [ 10 ] # Total of 50 runs
    env:
      WOLFSSL_PACKAGES_PATH: /tmp/wolfssl-packages
      OPENSSL_PACKAGES_PATH: /tmp/openssl-packages
      WOLFPROV_PACKAGES_PATH: /tmp/wolfprov-packages

    steps:
    - name: Checkout wolfProvider
      uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Download packages from build job
      uses: actions/download-artifact@v4
      with:
        name: debian-packages-${{ matrix.fips_ref }}${{ matrix.replace_default && '-replace-default' || '' }}-${{ matrix.wolfssl_ref }}-${{ matrix.openssl_ref }}
        path: /tmp/packages

    - name: Setup package directories
      run: |
        mv /tmp/packages/wolfssl-packages ${{ env.WOLFSSL_PACKAGES_PATH }}
        mv /tmp/packages/openssl-packages ${{ env.OPENSSL_PACKAGES_PATH }}
        mv /tmp/packages/wolfprov-packages ${{ env.WOLFPROV_PACKAGES_PATH }}

    - name: Install wolfSSL/OpenSSL/wolfprov packages
      run: |
        printf "Installing OpenSSL/wolfProvider packages (${{ matrix.fips_ref }}):\n"
        ls -la ${{ env.WOLFSSL_PACKAGES_PATH }}
        ls -la ${{ env.OPENSSL_PACKAGES_PATH }}
        ls -la ${{ env.WOLFPROV_PACKAGES_PATH }}

        apt install --reinstall -y \
          ${{ env.WOLFSSL_PACKAGES_PATH }}/libwolfssl_*.deb

        apt install --reinstall -y --allow-downgrades --allow-change-held-packages \
          ${{ env.OPENSSL_PACKAGES_PATH }}/openssl_*.deb \
          ${{ env.OPENSSL_PACKAGES_PATH }}/libssl3_*.deb \
          ${{ env.OPENSSL_PACKAGES_PATH }}/libssl-dev_*.deb

        apt install --reinstall -y \
          ${{ env.WOLFPROV_PACKAGES_PATH }}/libwolfprov_*.deb

    - name: Verify wolfProvider is properly installed
      run: |
        $GITHUB_WORKSPACE/scripts/verify-install.sh \
          ${{ matrix.replace_default && '--replace-default' || '' }} \
          ${{ matrix.fips_ref == 'FIPS' && '--fips' || '' }}

    - name: Run git + replace default + ssh test
      shell: bash
      run: |
        echo "=== Running Git + replace default + ssh Test ==="
        echo "Using the local test script for consistent testing"
        # Run the test with the matrix parameters
        echo "Testing with key type: ${{ matrix.key_type }}"
        echo "Running ${{ matrix.iterations }} iterations"

        # Run the scripts test
        ${{ matrix.force_fail }} ./scripts/test-git-ssh-dr.sh \
          --key-types "${{ matrix.key_type }}" \
          --iterations "${{ matrix.iterations }}" \
          --verbose

        echo "=== Test completed for ${{ matrix.key_type }} ==="
